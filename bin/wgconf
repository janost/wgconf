#!/usr/bin/env ruby

require 'fileutils'
require 'thor'
require 'yaml'
require 'wgconf'

module Wgconf
  class Cli < Thor
    desc 'example OUTFILE', 'Generate example YAML configuration to OUTFILE.'
    # rubocop:disable Metrics/MethodLength
    def example(outfile)
      nc = Wgconf::Model::NetConfig.new
      nc.persistent_keepalive = 25
      (1..3).each do |i|
        n = Wgconf::Model::Node.new("node #{i}")
        n.addresses = ["172.30.1.#{i}/16", "fdf0:c12a:6673:b25f::1:#{i}/64"]
        n.listen_endpoint = "127.0.0.#{i}"
        n.client_only = [true, false].sample
        nc.add_node(n)
      end
      nc.finalize
      File.write(outfile, YAML.dump(nc))
    end
    # rubocop:enable Metrics/MethodLength

    desc 'load INFILE', 'Load YAML configuration from INFILE and show node configs.'
    def load(infile)
      nc = YAML.load(File.read(infile)) # rubocop:disable Security/YAMLLoad
      cb = Wgconf::ConfBuilder.new(nc)
      nc.nodes.each do |node|
        puts "-------- CONFIG FOR #{node} ---------"
        puts cb.conf_for(node)
      end
    end

    desc 'generate INFILE',
         'Generate wg-quick config files for every node in the specified directory from INFILE.'
    method_option :outdir, aliases: '-d', required: true, type: :string,
                           desc: 'Target directory.'
    def generate(infile)
      nc = YAML.load(File.read(infile)) # rubocop:disable Security/YAMLLoad
      cb = Wgconf::ConfBuilder.new(nc)
      nc.nodes.each do |node|
        node_dir = File.join(options[:outdir], node.name)
        FileUtils.mkdir_p node_dir
        File.write(File.join(node_dir, "#{nc.interface_name}.conf"), cb.conf_for(node))
      end
    end
  end
end

Wgconf::Cli.start
