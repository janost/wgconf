# frozen_string_literal: true

module Wgconf
  class ConfBuilder
    include Wgconf::Utils

    def initialize(net_config)
      @net_config = net_config
      throw 'You need at least 2 nodes.' unless @net_config.nodes.count > 1
    end

    def conf_for(node_name)
      buffer = conf_header(node_name)

      @net_config.nodes.each do |pair_name, pair|
        next if node_name == pair_name

        buffer << "\n[Peer]\n# #{pair_name}\nPublicKey = #{wg_pubkey(pair.private_key)}\n"\
                  "PresharedKey = #{@net_config.get_psk(node_name, pair_name)}\n"\
                  "AllowedIPs = #{pair.addresses.join(', ')}\n"
        buffer << "Endpoint = #{pair.listen_endpoint}:#{pair.listen_port}\n" unless pair.client_only
      end
      buffer
    end

    private

    def conf_header(node_name)
      node = @net_config.nodes[node_name]
      buffer = "# Generated by wgconf at #{Time.now.getutc}, node: #{node_name}\n\n[Interface]\n"
      node.addresses.each do |address|
        buffer << "Address = #{address}\n"
      end
      buffer << "ListenPort = #{node.listen_port}\n"
      buffer << "PrivateKey = #{node.private_key}\n"
    end
  end
end
