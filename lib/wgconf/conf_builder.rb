module Wgconf
  class ConfBuilder
    include Wgconf::Utils

    def initialize(net_config)
      @net_config = net_config
      throw 'You need at least 2 nodes.' unless @net_config.nodes.count > 1
    end

    def conf_for(node)
      buffer = conf_header(node)

      @net_config.nodes.each do |pair|
        next if node.name == pair.name

        buffer << conf_pair(node, pair)
      end
      buffer
    end

    private

    # rubocop:disable Metrics/AbcSize
    def conf_pair(node, pair)
      buffer = "\n[Peer]\n# #{pair.name}\nPublicKey = #{wg_pubkey(pair.private_key)}\n"\
               "PresharedKey = #{@net_config.get_psk(node.name, pair.name)}\n"\
               "AllowedIPs = #{pair.addresses.join(', ')}\n"
      buffer << "Endpoint = #{pair.listen_endpoint}:#{pair.listen_port}\n" unless pair.client_only
      if node.client_only && !pair.client_only && @net_config.persistent_keepalive.positive?
        buffer << "PersistentKeepalive = #{@net_config.persistent_keepalive}\n"
      end
      buffer
    end
    # rubocop:enable Metrics/AbcSize

    def conf_header(node)
      buffer = "# Generated by wgconf at #{Time.now.getutc}, node: #{node.name}\n\n[Interface]\n"
      node.addresses.each do |address|
        buffer << "Address = #{address}\n"
      end
      buffer << "ListenPort = #{node.listen_port}\n"
      buffer << "PrivateKey = #{node.private_key}\n"
    end
  end
end
